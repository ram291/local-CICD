pipeline {
    agent any
    environment {
        // Use the job name and build number to create a unique image tag
        IMAGE_NAME = "my-spring-boot-app"
        IMAGE_TAG  = "build-${env.BUILD_NUMBER}"
        APP_NAME   = "spring-boot-app-container"
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the repository
                checkout scm
            }
        }

        stage('Build & Test') {
            steps {
                // The 'package' goal will compile, test, and package the application.
                // If tests fail, the pipeline will stop here.
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image using the Dockerfile in the workspace
                    docker.build("${IMAGE_NAME}:${IMAGE_TAG}", ".")
                }
            }
        }

        stage('Deploy Application') {
            steps {
                script {
                    // Stop and remove the old container if it exists
                    sh "docker stop ${APP_NAME} || true"
                    sh "docker rm ${APP_NAME} || true"

                    // Run the new Docker image as a container
                    sh "docker run -d --name ${APP_NAME} -p 8081:8080 ${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
    }
}